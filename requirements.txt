flask
pandas
scikit-learn
nltk
joblib
google_auth_oauthlib






import pandas as pd
import re
import nltk
from nltk.corpus import stopwords
from nltk.stem import PorterStemmer

# Download NLTK stopwords
nltk.download('stopwords')

def preprocess_text(text):
    # Ensure the input is a string
    if not isinstance(text, str):
        return ''  # Return empty string for non-string values
    # Convert to lowercase
    text = text.lower()
    # Remove special characters and numbers
    text = re.sub(r'[^a-zA-Z\s]', '', text)
    # Tokenize
    words = text.split()
    # Remove stopwords
    words = [word for word in words if word not in stopwords.words('english')]
    # Stemming
    stemmer = PorterStemmer()
    words = [stemmer.stem(word) for word in words]
    return ' '.join(words)

def preprocess_data(input_file, output_file):
    # Load dataset
    data = pd.read_csv(input_file)
    # Ensure the 'text' and 'label' columns exist
    if 'text' not in data.columns or 'label' not in data.columns:
        raise ValueError("The dataset must contain 'text' and 'label' columns.")
    # Drop rows with missing 'text' or 'label' values
    data = data.dropna(subset=['text', 'label'])
    # Convert 'text' column to string
    data['text'] = data['text'].astype(str)
    # Preprocess text
    data['text'] = data['text'].apply(preprocess_text)
    # Save processed data (including the 'label' column)
    data.to_csv(output_file, index=False)

if __name__ == "__main__":
    # Use relative paths
    preprocess_data('data/spam_dataset.csv', 'data/processed_data.csv')
